package student

import (
	"database/sql"
	"errors"
	"fmt"

	"vickgenda/internal/models"
	"vickgenda/internal/store" // Assuming store package is accessible
)

var ActiveStudentStore store.StudentStore

// InitializeStudentStore sets up the package-level store variable.
// This function should be called by the main application during setup.
func InitializeStudentStore(db *sql.DB) {
	ActiveStudentStore = store.NewSQLiteStudentStore(db)
}

// RegistrarAluno creates a new student record.
func RegistrarAluno(nome string) (models.Student, error) {
	if nome == "" {
		return models.Student{}, errors.New("nome do aluno não pode ser vazio")
	}
	if ActiveStudentStore == nil {
		return models.Student{}, errors.New("StudentStore não inicializado")
	}

	student := models.Student{
		Name: nome,
		// ID will be generated by the store
	}

	savedStudent, err := ActiveStudentStore.SaveStudent(student)
	if err != nil {
		return models.Student{}, fmt.Errorf("erro ao salvar aluno: %w", err)
	}
	return savedStudent, nil
}

// ListarAlunos retrieves all student records.
func ListarAlunos() ([]models.Student, error) {
	if ActiveStudentStore == nil {
		return nil, errors.New("StudentStore não inicializado")
	}

	students, err := ActiveStudentStore.ListStudents()
	if err != nil {
		return nil, fmt.Errorf("erro ao listar alunos: %w", err)
	}
	return students, nil
}

// GetStudentByID retrieves a student by their ID.
// This might be useful for other packages or future student commands.
func GetStudentByID(id string) (models.Student, error) {
    if id == "" {
        return models.Student{}, errors.New("ID do aluno não pode ser vazio")
    }
    if ActiveStudentStore == nil {
        return models.Student{}, errors.New("StudentStore não inicializado")
    }

    student, err := ActiveStudentStore.GetStudentByID(id)
    if err != nil {
        // The store already returns a good error for sql.ErrNoRows,
        // so just pass it along or wrap it if more context is needed.
        return models.Student{}, fmt.Errorf("erro ao buscar aluno por ID: %w", err)
    }
    return student, nil
}
